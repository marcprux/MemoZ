name: MemoZ CI

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches:
      - '*'
  schedule:
    # run at 6AM & 6PM UTC
    - cron:  '0 6,18 * * *'

jobs:
  Linux:
    runs-on: ubuntu-latest
    steps:
      - name: Env: ${XXX}
        run: echo XXX=YYY > $GITHUB_ENV
      - name: Env2: ${XXX}
        run: echo XXX=ZZZ > $GITHUB_ENV
      - name: Env3 ${XXX}
        run: echo XXX=AAA > $GITHUB_ENV

      - uses: actions/checkout@v2
      - name: Test (Debug)
        run: swift test -v --configuration debug
      - name: Test (Release)
        run: swift test -v --configuration release -Xswiftc -enable-testing

  watchOS:
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v2

      - run: |
            xcodebuild clean test \
              -configuration Release \
              -scheme "MemoZ" \
              -sdk "watchsimulator" \
              -destination "platform=watchOS Simulator,name=Apple Watch Series 6 - 44mm" \
              ONLY_ACTIVE_ARCH=YES CODE_SIGNING_REQUIRED=NO

  iOS:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
            xcodebuild clean test \
              -configuration Release \
              -scheme "MemoZ" \
              -sdk "iphonesimulator" \
              -destination "platform=iOS Simulator,name=iPhone 14" \
              ONLY_ACTIVE_ARCH=YES CODE_SIGNING_REQUIRED=NO

  tvOS:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
            xcodebuild clean test \
              -configuration Release \
              -scheme "MemoZ" \
              -sdk "appletvsimulator" \
              -destination "platform=tvOS Simulator,name=Apple TV" \
              ONLY_ACTIVE_ARCH=YES CODE_SIGNING_REQUIRED=NO

  macOS10:
    runs-on: macos-10.15
    steps:
      - uses: actions/checkout@v2
      - name: Test (Debug)
        run: swift test -v --configuration debug
      - name: Test (Release)
        run: swift test -v --configuration release -Xswiftc -enable-testing

  macOS11:
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v2
      - name: Test (Debug)
        run: swift test -v --configuration debug
      - name: Test (Release)
        run: swift test -v --configuration release -Xswiftc -enable-testing

  macOS12:
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v2
      - name: Test (Debug)
        run: swift test -v --configuration debug
      - name: Test (Release)
        run: swift test -v --configuration release -Xswiftc -enable-testing

  Android-macOS:
    if: false
    runs-on: macos-12
    env:
      DEVELOPER_DIR: /Applications/Xcode_13.2.1.app/Contents/Developer
    steps:
      - uses: actions/checkout@v2
      - name: Setup Android Toolchain
        run: |
          #TOOLCHAIN_URL="https://github.com/marcprux/swift-android-toolchain/releases/download/swift-5.5.2-android-ndk-r21e/swift-5.5.2-android-ndk-r21e-xcode-13.3.1-toolchain.tar.gz"
          TOOLCHAIN_URL="https://github.com/marcprux/swift-android-toolchain/releases/download/swift-5.5.3-android-ndk-r21e/swift-5.5.3-android-ndk-r21e-xcode-13.3.1-toolchain.tar.gz"

          SWIFT_DIR="swift-android-toolchain"
          curl -fsSL -o "${SWIFT_DIR}.tar.gz" "${TOOLCHAIN_URL}"
          tar xzf "${SWIFT_DIR}.tar.gz"
          du -skh "${SWIFT_DIR}"

          SWIFT_PATH="${PWD}/${SWIFT_DIR}"

          #ls "${SWIFT_PATH}"
          ${SWIFT_PATH}/usr/bin/swift --version

          echo "${SWIFT_PATH}/usr/bin" >> $GITHUB_PATH

      - name: Build
        run: |
          swift --version
          swiftc-aarch64-linux-android --version
          swiftc-x86_64-linux-android --version

          swift-build-aarch64-linux-android
          swift-build-x86_64-linux-android

          ls -la .build/

          #swift test -v --configuration debug

