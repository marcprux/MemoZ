name: MemoZ CI


on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches:
      - '*'
  schedule:
    # run at 6AM & 6PM UTC
    - cron:  '0 6,18 * * *'

# construct CI latticeflow with cheaper platforms first: Linux & Windows then macOS10, macOS11, iOS, tvOS, watchOS

jobs:
  Linux:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - name: Install create-api
        run: |
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          brew update
          brew config
          #brew doctor
          brew install swift
          #brew install -v --head create-api
          swift --version
      - name: Test (Debug)
        run: swift test -v --configuration debug
      - name: Test (Release)
        run: swift test -v --configuration release -Xswiftc -enable-testing

  watchOS:
    runs-on: macos-11
    needs: [Linux] # Linux must pass first
    steps:
      - uses: actions/checkout@v2

      - run: |
            xcodebuild clean test \
              -configuration Release \
              -scheme "MemoZ" \
              -sdk "watchsimulator" \
              -destination "platform=watchOS Simulator,name=Apple Watch Series 6 - 44mm" \
              ONLY_ACTIVE_ARCH=YES CODE_SIGNING_REQUIRED=NO

  iOS:
    runs-on: macos-latest
    needs: [watchOS] 
    steps:
      - uses: actions/checkout@v2
      - run: |
            xcodebuild clean test \
              -configuration Release \
              -scheme "MemoZ" \
              -sdk "iphonesimulator" \
              -destination "platform=iOS Simulator,name=iPod touch (7th generation)" \
              ONLY_ACTIVE_ARCH=YES CODE_SIGNING_REQUIRED=NO

  tvOS:
    runs-on: macos-latest
    needs: [iOS] # iOS must pass first
    steps:
      - uses: actions/checkout@v2
      - run: |
            xcodebuild clean test \
              -configuration Release \
              -scheme "MemoZ" \
              -sdk "appletvsimulator" \
              -destination "platform=tvOS Simulator,name=Apple TV" \
              ONLY_ACTIVE_ARCH=YES CODE_SIGNING_REQUIRED=NO

  macOS10:
    runs-on: macos-10.15
    needs: [Linux] # Linux must pass first
    steps:
      - uses: actions/checkout@v2
      - name: Test (Debug)
        run: swift test -v --configuration debug
      - name: Test (Release)
        run: swift test -v --configuration release -Xswiftc -enable-testing

  macOS11:
    runs-on: macos-11
    needs: [macOS10] # macOS10 must pass first
    steps:
      - uses: actions/checkout@v2
      - name: Test (Debug)
        run: swift test -v --configuration debug
      - name: Test (Release)
        run: swift test -v --configuration release -Xswiftc -enable-testing

  macOS12:
    runs-on: macos-12
    needs: [macOS11] # macOS11 must pass first
    steps:
      - uses: actions/checkout@v2
      - name: Test (Debug)
        run: swift test -v --configuration debug
      - name: Test (Release)
        run: swift test -v --configuration release -Xswiftc -enable-testing

  Windows10:
    # windows is broken
    if: false 
    runs-on: windows-latest
    needs: [Linux] # Linux must pass first
    steps:
      - uses: actions/checkout@v2
      - uses: compnerd/gha-setup-swift@main
        with:
          branch: swift-5.5-release
          tag: 5.5-RELEASE
      - name: Build (Debug)
        # https://github.com/compnerd/swift-win32/issues/327
        run: swift build -v -c debug || swift build -v -c debug
      - name: Build (Release)
        run: swift build -v -c release || swift build -v -c release
      - name: Test (Debug)
        run: swift test -v --configuration debug --enable-test-discovery || swift test -v --configuration debug --enable-test-discovery
      - name: Test (Release)
        run: swift test -v --configuration release -Xswiftc -enable-testing --enable-test-discovery || swift test -v --configuration release -Xswiftc -enable-testing --enable-test-discovery

  Release:
    runs-on: ubuntu-latest
    needs: [Linux, macOS12, iOS, tvOS, watchOS, Windows10]

    steps:
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            CHANGELOG.md
            RELEASE_NOTES.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

